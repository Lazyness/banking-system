@startuml

package "models" #557895 {
  User o-- Card
  User o-- Phone
  Card o-- Money
  Money o-- Currency
  Phone o-- Money
  Account <|-- User
  User o-- Loan
}

package "system" #715426 {
      SystemImpl o-- User
      Encryption <-- Account
      Generator <-- User
      Generator <-- Loan
}

package "iface" #799986 {
    I_System <|.. SystemImpl
}

package "ui" #999999{

    package "main" #498888{
          Main --> I_System
    }
}

interface I_System {
    +boolean replenishOnTheCard(String ownCard,BigDecimal replenishAmount);
    +boolean replenishOnTheCard(String ownCard, String rechargeableCard, BigDecimal replenishAmount);
    +ArrayList<Card> returnListCardsUser();
    +ArrayList<Phone> returnListPhoneUser();
    +boolean withdrawingMoney(String ownCard, BigDecimal withdrawingAmount);
    +boolean replenishPhone(String numberCard, String phone, BigDecimal amount);
    +boolean addPhone(String numberPhone);
    +boolean registration();
    +boolean registrationCard();
    +User authorization(Account account);
    +void takeLoans(String numberCard);
}

class Main {
    + {static} void main(String[] args)
}

class Card {
    -String numberCard;
    -String cardEndDataMonth;
    -String cardEndDataYear;
    -String CVC2;
    -Money money;
}

class Money {
    - BigDecimal amount;
    - Currency currency;
}

class Phone {
    - String phoneNumber;
    - Money money;
}

class User {
    - String firstName;
    - String lastName;
}


class SystemImpl{

}

class Account {
    - String login;
    - String password;
}

class Loan {
    - BigDecimal sumLoan;
    - BigDecimal remainedLoan;
    - String percentLoan;
    - String deadlineLoan;
    - String currencyLoan;
    - String startLoan;
    - String endLoan;
}

class Encryption{
+ {static} StringBuilder encryptionSHA256(char[] password);
- {static} byte[] toBytes(char[] chars);
}

class Generator{
    + {static} String generateNumberCard();
    + {static} String generateCardEndDataMonth();
    + {static} String generateCardEndDataYear();
    + {static} String generateCVC2();
    + {static} String generateData(int deadline);
    - {static} int generateRandomize(int min, int max);
}
@enduml